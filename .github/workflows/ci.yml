name: CI
on: [push, pull_request]
env:
  go-version: '1.14.x'
jobs:
  test:
    name: Test
    strategy:
      matrix:
        pg-version: ['10', '11']
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Install Redis
      uses: zhulik/redis-action@v1.0.0
      with:
        redis version: '5'

    - name: Install PostgreSQL
      uses: nyaruka/postgis-action@master
      with:
        postgresql version: ${{ matrix.pg-version }}

    - name: Install Linux packages
      run: sudo apt install -y --no-install-recommends postgresql-client

    - name: Initialize database
      run: |
        psql -h localhost -U postgres -c "CREATE USER mailroom_test PASSWORD 'temba';"
        psql -h localhost -U postgres -c "ALTER ROLE mailroom_test WITH SUPERUSER;"
        psql -h localhost -U postgres -c "CREATE DATABASE mailroom_test;"

    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ env.go-version }}

    - name: Run tests
      run: go test -p=1 -coverprofile=coverage.text -covermode=atomic ./...

    - name: Upload coverage
      if: success()
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
  
  release:
    name: Release
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Fetch GoFlow docs
      # for backward compatibility, English docs are copied to root of docs directory
      run: |
        GOFLOW_VERSION=$(grep goflow go.mod | cut -d" " -f2 | cut -c2-)
        curl https://codeload.github.com/nyaruka/goflow/tar.gz/v$GOFLOW_VERSION | tar --wildcards --strip=1 -zx "goflow-${GOFLOW_VERSION}/docs/*"
        cp ./docs/en-us/*.* docs/

    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ env.go-version }}

    - name: Publish release
      uses: goreleaser/goreleaser-action@v1
      if: ${{ !contains(github.ref, '-') }}
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish non-master release
      uses: goreleaser/goreleaser-action@v1
      if: contains(github.ref, '-')
      with:
        version: latest
        args: release --rm-dist --skip-validate
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
